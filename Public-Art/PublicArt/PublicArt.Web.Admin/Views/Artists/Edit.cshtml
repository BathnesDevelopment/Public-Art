@model PublicArt.Web.Admin.ViewModels.ArtistEditViewModel

@{
    ViewBag.Title = Model.Name;
}

<div class="jumbotron">
    <h1>Editing artist - @Model.Name</h1>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">

        <div class="col-md-8 col-md-offset-1">

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.HiddenFor(model => model.ArtistId)
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Biography, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Biography, new {htmlAttributes = new {@class = "form-control", placeholder = "optional", rows = 4}})
                        @Html.ValidationMessageFor(model => model.Biography, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WebsiteUrl, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WebsiteUrl, new {htmlAttributes = new {@class = "form-control", placeholder = "optional"}})
                        @Html.ValidationMessageFor(model => model.WebsiteUrl, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Dates", new {@class = "control-label col-md-2"})
                    <div class="col-md-5">
                        <div class="input-group">
                            <span class="input-group-addon">@Html.DisplayNameFor(model => model.StartYear)</span>
                            @Html.EditorFor(model => model.StartYear, new {htmlAttributes = new {@class = "form-control", placeholder = "optional"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.StartYear, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-5">
                        <div class="input-group">
                            <span class="input-group-addon">@Html.DisplayNameFor(model => model.EndYear)</span>
                            @Html.EditorFor(model => model.EndYear, new {htmlAttributes = new {@class = "form-control", placeholder = "optional"}})
                        </div>
                        @Html.ValidationMessageFor(model => model.EndYear, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-xs-12 clearfix">
            <div class="form-group pull-left">
                @Html.ActionLink("Delete", "Delete", new {id = Model.ArtistId}, new {@class = "btn btn-danger"})
            </div>

            <div class="form-group pull-right">
                <button type="submit" class="btn btn-lg btn-success">Save</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var Page = {
            init: function() {
                Page.initDatePickers();
            },
            ele: {
                $inStartYear: $('#StartYear'),
                $inEndYear: $('#EndYear')
            },
            initDatePickers: function() {
                Page.ele.$inStartYear.datepicker({
                    format: "yyyy",
                    viewMode: "years",
                    minViewMode: "years"
                });

                Page.ele.$inEndYear.datepicker({
                    format: "yyyy",
                    viewMode: "years",
                    minViewMode: "years"
                });
            }
        };

        $().ready(function() {
            Page.init();
        });
    </script>
}