@model PublicArt.Web.Admin.ViewModels.ItemEditViewModel

@{
    ViewBag.Title = Model.Reference;
}

<h2>Editing @Model.Reference</h2>
<hr/>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default collapsable">
        <div class="panel-heading" data-toggle="collapse" data-target="#imagePanelCollapse">
            <h3 class="panel-title">Item Images</h3>
        </div>
        <div id="imagePanelCollapse" class="panel-collapse collapse in">
            <div class="panel-body">
                <table class="table table-condensed">
                    <colgroup>
                        <col class="col-md-3">
                        <col class="col-md-8">
                        <col class="col-md-1">
                    </colgroup>
                    <tbody>
                        @Html.EditorFor(x => x.Images)
                    </tbody>
                </table>
            </div>
        </div>
        <div class="panel-footer clearfix">
            <div class="pull-right">
                <div class="form-inline">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.ItemId)
                        <input type="file" class="form-control" id="newImage"/>
                    </div>
                    <button type="button" class="btn btn-success" id="imageUpload">Upload</button>
                </div>
            </div>
        </div>
    </div>

    <hr />

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.ItemId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnveilingYear, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnveilingYear, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UnveilingYear, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnveilingDetails, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnveilingDetails, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.UnveilingDetails, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Statement, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Statement, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.Statement, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Material, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Material, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.Material, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Inscription, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Inscription, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.Inscription, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.History, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.History, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.History, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WebsiteUrl, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.WebsiteUrl, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.WebsiteUrl, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Height, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Width, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Width, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Width, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Depth, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Depth, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Depth, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Diameter, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Diameter, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Diameter, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SurfaceCondition, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurfaceCondition, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.SurfaceCondition, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StructuralCondition, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.StructuralCondition, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.StructuralCondition, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control", @rows = 6}})
                @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Latitude, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Longitude, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Archived, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Archived)
                    @Html.ValidationMessageFor(model => model.Archived, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var $ItemImagePrimary = $('.ItemImagePrimary');

            var updatePrimaryButtons = function() {
                $ItemImagePrimary
                    .removeClass('btn-primary')
                    .addClass('btn-default')
                    .each(function () {
                        var $this = $(this);
                        //console.log($this, $('#' + $this.data('controlid')).val());
                        if ($('#' + $this.data('controlid')).val() === 'True') {
                            $this.removeClass('btn-default').addClass('btn-primary');
                        }
                    });
            }

            $ItemImagePrimary.click(function() {
                $ItemImagePrimary
                    .each(function() {
                        $('#' + $(this).data('controlid')).val('False');
                    });
                $('#' + $(this)
                    .data('controlid')
                ).val('True');
                updatePrimaryButtons();
            });

            updatePrimaryButtons();
        });
    </script>
}